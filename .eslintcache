[{"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\index.js":"1","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\App.js":"2","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\reportWebVitals.js":"3","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\MenuComponent.jsx":"4","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\dishes.jsx":"5","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\DishdetailComponent.jsx":"6","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\MainComponent.jsx":"7","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\HeaderComponent.jsx":"8","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\FooterComponent.jsx":"9","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\HomeComponent.jsx":"10","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\ContactComponent.jsx":"11","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\comments.jsx":"12","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\promotions.jsx":"13","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\leaders.jsx":"14","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\AboutComponent.jsx":"15","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\configureStore.jsx":"16","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\reducer.jsx":"17"},{"size":638,"mtime":1610560279311,"results":"18","hashOfConfig":"19"},{"size":495,"mtime":1612084068199,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":2338,"mtime":1610698405836,"results":"22","hashOfConfig":"19"},{"size":1614,"mtime":1610649136850,"results":"23","hashOfConfig":"19"},{"size":5097,"mtime":1610660561240,"results":"24","hashOfConfig":"19"},{"size":2651,"mtime":1612084744671,"results":"25","hashOfConfig":"19"},{"size":5528,"mtime":1610746599811,"results":"26","hashOfConfig":"19"},{"size":2799,"mtime":1610565651179,"results":"27","hashOfConfig":"19"},{"size":1195,"mtime":1610654428972,"results":"28","hashOfConfig":"19"},{"size":21952,"mtime":1612952424123,"results":"29","hashOfConfig":"19"},{"size":4927,"mtime":1610649178849,"results":"30","hashOfConfig":"19"},{"size":457,"mtime":1610649204388,"results":"31","hashOfConfig":"19"},{"size":2432,"mtime":1610649238182,"results":"32","hashOfConfig":"19"},{"size":4429,"mtime":1610699083569,"results":"33","hashOfConfig":"19"},{"size":206,"mtime":1612083837965,"results":"34","hashOfConfig":"19"},{"size":407,"mtime":1612084114643,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"8mn3ro",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\index.js",[],["73","74"],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\App.js",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\reportWebVitals.js",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\MenuComponent.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\dishes.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\DishdetailComponent.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\MainComponent.jsx",["75"],"import React, { Component } from 'react';\r\nimport Home from \"./HomeComponent\";\r\nimport About from \"./AboutComponent\";\r\nimport Menu from \"./MenuComponent\";\r\nimport Contact from \"./ContactComponent\";\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\n// import { DISHES } from '../shared/dishes';\r\n// import { COMMENTS } from '../shared/comments';\r\n// import { PROMOTIONS } from '../shared/promotions';\r\n// import { LEADERS } from '../shared/leaders';\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                <DishDetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))} />\r\n            );\r\n        };\r\n\r\n        const HomePage = () => {\r\n            return (\r\n                <Home\r\n                    dish={this.props.dishes.filter((dish) => dish.featured)[0]}\r\n                    promotion={this.props.promotions.filter((promotion) => promotion.featured)[0]}\r\n                    leader={this.props.leaders.filter((leader) => leader.featured)[0]}\r\n                />\r\n            );\r\n        }\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/home\" component={HomePage} />\r\n                    <Route path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n                    <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n                    <Route path='/menu/:dishId' component={DishWithId} />\r\n                    <Route exact path=\"/contactus\" component={Contact} />\r\n                    <Redirect to=\"/home\" />\r\n                </Switch>\r\n                {/* <Menu dishes={this.state.dishes} onClick={(dishId) => this.onDishSelect(dishId)} /> */}\r\n                {/* <DishDetail dish={this.state.dishes.filter((dish) => dish.id === this.state.selectedDish)[0]} /> */}\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Main));\r\n\r\n","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\HeaderComponent.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\FooterComponent.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\HomeComponent.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\ContactComponent.jsx",["76","77","78","79","80","81","82","83","84","85","86","87"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col,Row, FormFeedback } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n    \r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //State not needed after rect redux form\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current State is: \" + JSON.stringify(values));\r\n        alert(\"Current State is: \" + JSON.stringify(values));\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" ><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <LocalForm onSubmit={(values)=>this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\"\r\n                                        className=\"form-control\"\r\n                                        id=\"firstname\"\r\n                                        name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: \"Required \",\r\n                                            minLength: \"Must be greater than 2 charachters\",\r\n                                            maxLength: \"Must be 15 charachters or less\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" \r\n                                        className=\"form-control\" \r\n                                        id=\"lastname\" \r\n                                        name=\"lastname\" \r\n                                        placeholder=\"Last Name\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: \"Required \",\r\n                                            minLength: \"Must be greater than 2 charachters\",\r\n                                            maxLength: \"Must be 15 charachters or less\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" \r\n                                        className=\"form-control\" \r\n                                        id=\"telnum\" \r\n                                        name=\"telnum\" \r\n                                        placeholder=\"Tel. Number\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: \"Required \",\r\n                                            minLength: \"Must be greater than 2 numbers\",\r\n                                            maxLength: \"Must be 15 numbers or less\",\r\n                                            isNumber: \"Must be a number\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" \r\n                                        className=\"form-control\" \r\n                                        id=\"email\" \r\n                                        name=\"email\" \r\n                                        placeholder=\"Email\"\r\n                                        validators={{\r\n                                            required,\r\n                                            validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: \"Required \",\r\n                                            validEmail: \"Invalid Email Address\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\" >\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" \r\n                                                className=\"form-check-input\" \r\n                                                name=\"agree\"/>\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" \r\n                                        name=\"contactType\" \r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" \r\n                                        className=\"form-control\" \r\n                                        type=\"textarea\" \r\n                                        id=\"message\" \r\n                                        name=\"message\" \r\n                                        rows=\"12\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport default Contact;\r\n\r\n\r\n//Before React redux forms was used \r\n\r\n// import React, { Component } from 'react';\r\n// import { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from \"reactstrap\";\r\n// import { Link } from 'react-router-dom';\r\n\r\n// class Contact extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             firstname: '',\r\n//             lastname: '',\r\n//             telnum: '',\r\n//             email: '',\r\n//             agree: false,\r\n//             contactType: 'Tel.',\r\n//             message: '',\r\n//             touched: {\r\n//                 firstname: false,\r\n//                 lastname: false,\r\n//                 telnum: false,\r\n//                 email: false,\r\n//             }\r\n//         };\r\n//         this.handleSubmit = this.handleSubmit.bind(this);\r\n//         this.handleInputChange = this.handleInputChange.bind(this);\r\n//     }\r\n\r\n//     handleBlur = (field) => (event) => {\r\n//         this.setState({\r\n//             touched: { ...this.state.touched, [field]: true }\r\n//         });\r\n//     }\r\n\r\n//     validate(firstname, lastname, telnum, email) {\r\n//         const errors = {\r\n//             firstname: '',\r\n//             lastname: '',\r\n//             telnum: '',\r\n//             email: ''\r\n//         };\r\n//         if (this.state.touched.firstname && firstname.length < 3)\r\n//             errors.firstname = 'First Name should be >= 3 characters';\r\n//         else if (this.state.touched.firstname && firstname.length > 10)\r\n//             errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n//         if (this.state.touched.lastname && lastname.length < 3)\r\n//             errors.lastname = 'Last Name should be >= 3 characters';\r\n//         else if (this.state.touched.lastname && lastname.length > 10)\r\n//             errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n//         const reg = /^\\d+$/;\r\n//         if (this.state.touched.telnum && !reg.test(telnum))\r\n//             errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n//         if (this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n//             errors.email = 'Email should contain a @';\r\n\r\n//         return errors;\r\n//     }\r\n\r\n//     handleInputChange(event) {\r\n//         const target = event.target;\r\n//         const value = (target.type === 'checkbox') ? target.checked : target.value;\r\n//         const name = target.name;\r\n//         this.setState({\r\n//             [name]: value\r\n//         })\r\n//     }\r\n\r\n//     handleSubmit(event) {\r\n//         console.log(\"Current State is: \" + JSON.stringify(this.state));\r\n//         alert(\"Current State is: \" + JSON.stringify(this.state));\r\n//         event.preventDefault();\r\n//     }\r\n\r\n//     render() {\r\n//         const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n\r\n//         return (\r\n//             <div className=\"container\">\r\n//                 <div className=\"row\">\r\n//                     <Breadcrumb>\r\n//                         <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n//                         <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n//                     </Breadcrumb>\r\n//                     <div className=\"col-12\">\r\n//                         <h3>Contact Us</h3>\r\n//                         <hr />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"row row-content\">\r\n//                     <div className=\"col-12\">\r\n//                         <h3>Location Information</h3>\r\n//                     </div>\r\n//                     <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n//                         <h5>Our Address</h5>\r\n//                         <address>\r\n//                             121, Clear Water Bay Road<br />\r\n//                         Clear Water Bay, Kowloon<br />\r\n//                         HONG KONG<br />\r\n//                             <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n//                             <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n//                             <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n//                         </address>\r\n//                     </div>\r\n//                     <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n//                         <h5>Map of our Location</h5>\r\n//                     </div>\r\n//                     <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n//                         <div className=\"btn-group\" role=\"group\">\r\n//                             <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n//                             <a role=\"button\" className=\"btn btn-info\" ><i className=\"fa fa-skype\"></i> Skype</a>\r\n//                             <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"row row-content\">\r\n//                     <div className=\"col-12\">\r\n//                         <h3>Send us Your Feedback</h3>\r\n//                     </div>\r\n//                     <div className=\"col-12 col-md-9\">\r\n//                         <Form onSubmit={this.handleSubmit}>\r\n//                             <FormGroup row>\r\n//                                 <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"text\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" value={this.state.firstname} onChange={this.handleInputChange} onBlur={this.handleBlur('firstname')} valid={errors.firstname === ''} invalid={errors.firstname !== ''} />\r\n//                                     <FormFeedback>{errors.firstname}</FormFeedback>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"text\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" value={this.state.lastname} onChange={this.handleInputChange} onBlur={this.handleBlur('lastname')} valid={errors.lastname === ''} invalid={errors.lastname !== ''} />\r\n//                                     <FormFeedback>{errors.lastname}</FormFeedback>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"tel\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. Number\" value={this.state.telnum} onChange={this.handleInputChange} onBlur={this.handleBlur('telnum')} valid={errors.telnum === ''} invalid={errors.telnum !== ''} />\r\n//                                     <FormFeedback>{errors.telnum}</FormFeedback>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Label htmlFor=\"email\" md={2}>Email</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleInputChange} onBlur={this.handleBlur('email')} valid={errors.email === ''} invalid={errors.email !== ''} />\r\n//                                     <FormFeedback>{errors.email}</FormFeedback>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Col md={{ size: 6, offset: 2 }}>\r\n//                                     <FormGroup check>\r\n//                                         <Label check>\r\n//                                             <Input type=\"checkbox\" name=\"agree\" checked={this.state.agree} onChange={this.handleInputChange} />\r\n//                                             <strong>May we contact you?</strong>\r\n//                                         </Label>\r\n//                                     </FormGroup>\r\n//                                 </Col>\r\n//                                 <Col md={{ size: 3, offset: 1 }}>\r\n//                                     <Input type=\"select\" name=\"contactType\" value={this.state.contactType} onChange={this.handleInputChange} >\r\n//                                         <option>Tel.</option>\r\n//                                         <option>Email</option>\r\n//                                     </Input>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"textarea\" id=\"message\" name=\"message\" rows=\"12\" value={this.state.message} onChange={this.handleInputChange} />\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row >\r\n//                                 <Col md={{ size: 10, offset: 2 }}>\r\n//                                     <Button type=\"submit\" color=\"primary\">\r\n//                                         Send Feedback\r\n//                                     </Button>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                         </Form>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Contact;","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\comments.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\promotions.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\leaders.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\AboutComponent.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\configureStore.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\reducer.jsx",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":27,"column":5,"nodeType":"94","messageId":"95","endLine":29,"endColumn":6},{"ruleId":"96","severity":1,"message":"97","line":2,"column":46,"nodeType":"98","messageId":"99","endLine":2,"endColumn":50},{"ruleId":"96","severity":1,"message":"100","line":2,"column":52,"nodeType":"98","messageId":"99","endLine":2,"endColumn":61},{"ruleId":"96","severity":1,"message":"101","line":2,"column":70,"nodeType":"98","messageId":"99","endLine":2,"endColumn":75},{"ruleId":"96","severity":1,"message":"102","line":2,"column":86,"nodeType":"98","messageId":"99","endLine":2,"endColumn":98},{"ruleId":"103","severity":1,"message":"104","line":60,"column":29,"nodeType":"105","endLine":60,"endColumn":72},{"ruleId":"106","severity":1,"message":"107","line":74,"column":37,"nodeType":"105","endLine":84,"endColumn":39},{"ruleId":"106","severity":1,"message":"107","line":100,"column":37,"nodeType":"105","endLine":110,"endColumn":39},{"ruleId":"106","severity":1,"message":"107","line":126,"column":37,"nodeType":"105","endLine":137,"endColumn":39},{"ruleId":"106","severity":1,"message":"107","line":154,"column":37,"nodeType":"105","endLine":163,"endColumn":39},{"ruleId":"106","severity":1,"message":"108","line":179,"column":45,"nodeType":"105","endLine":181,"endColumn":63},{"ruleId":"106","severity":1,"message":"109","line":187,"column":37,"nodeType":"105","endLine":189,"endColumn":66},{"ruleId":"106","severity":1,"message":"110","line":198,"column":37,"nodeType":"105","endLine":203,"endColumn":52},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'FormGroup' is defined but never used.","'Input' is defined but never used.","'FormFeedback' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]