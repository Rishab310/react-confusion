[{"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\index.js":"1","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\App.js":"2","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\reportWebVitals.js":"3","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\MenuComponent.jsx":"4","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\dishes.jsx":"5","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\DishdetailComponent.jsx":"6","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\MainComponent.jsx":"7","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\HeaderComponent.jsx":"8","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\FooterComponent.jsx":"9","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\HomeComponent.jsx":"10","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\ContactComponent.jsx":"11","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\comments.jsx":"12","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\promotions.jsx":"13","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\leaders.jsx":"14","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\AboutComponent.jsx":"15","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\configureStore.jsx":"16","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\reducer.jsx":"17"},{"size":638,"mtime":1610560279311,"results":"18","hashOfConfig":"19"},{"size":495,"mtime":1612084068199,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":2338,"mtime":1610698405836,"results":"22","hashOfConfig":"19"},{"size":1614,"mtime":1610649136850,"results":"23","hashOfConfig":"19"},{"size":5097,"mtime":1610660561240,"results":"24","hashOfConfig":"19"},{"size":2651,"mtime":1612084744671,"results":"25","hashOfConfig":"19"},{"size":5528,"mtime":1610746599811,"results":"26","hashOfConfig":"19"},{"size":2799,"mtime":1610565651179,"results":"27","hashOfConfig":"19"},{"size":1195,"mtime":1610654428972,"results":"28","hashOfConfig":"19"},{"size":9551,"mtime":1610745406017,"results":"29","hashOfConfig":"19"},{"size":4927,"mtime":1610649178849,"results":"30","hashOfConfig":"19"},{"size":457,"mtime":1610649204388,"results":"31","hashOfConfig":"19"},{"size":2432,"mtime":1610649238182,"results":"32","hashOfConfig":"19"},{"size":4429,"mtime":1610699083569,"results":"33","hashOfConfig":"19"},{"size":206,"mtime":1612083837965,"results":"34","hashOfConfig":"19"},{"size":407,"mtime":1612084114643,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"8mn3ro",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\index.js",[],["72","73"],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\App.js",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\reportWebVitals.js",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\MenuComponent.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\dishes.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\DishdetailComponent.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\MainComponent.jsx",["74"],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\HeaderComponent.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\FooterComponent.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\HomeComponent.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\ContactComponent.jsx",["75"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched: {\r\n                firstname : false,\r\n                lastname : false,\r\n                telnum: false,\r\n                email: false,\r\n            }\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleBlur = (field) => (event) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true }\r\n        });\r\n    }\r\n\r\n    validate(firstname, lastname, telnum, email) {\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n        if (this.state.touched.firstname && firstname.length < 3)\r\n            errors.firstname = 'First Name should be >= 3 characters';\r\n        else if (this.state.touched.firstname && firstname.length > 10)\r\n            errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n        if (this.state.touched.lastname && lastname.length < 3)\r\n            errors.lastname = 'Last Name should be >= 3 characters';\r\n        else if (this.state.touched.lastname && lastname.length > 10)\r\n            errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.telnum && !reg.test(telnum))\r\n            errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n        if (this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n            errors.email = 'Email should contain a @';\r\n\r\n        return errors;\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = (target.type === 'checkbox') ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log(\"Current State is: \" + JSON.stringify(this.state));\r\n        alert(\"Current State is: \" + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" ><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" value={this.state.firstname} onChange={this.handleInputChange} onBlur={this.handleBlur('firstname')} valid={errors.firstname === ''} invalid={ errors.firstname !== ''}/>\r\n                                    <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" value={this.state.lastname} onChange={this.handleInputChange} onBlur={this.handleBlur('lastname')} valid={errors.lastname === ''} invalid={errors.lastname !== ''}/>\r\n                                    <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. Number\" value={this.state.telnum} onChange={this.handleInputChange} onBlur={this.handleBlur('telnum')} valid={errors.telnum === ''} invalid={errors.telnum !== ''}/>\r\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleInputChange} onBlur={this.handleBlur('email')} valid={errors.email === ''} invalid={errors.email !== ''}/>\r\n                                    <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" name=\"agree\" checked={this.state.agree} onChange={this.handleInputChange}  />\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Input type=\"select\" name=\"contactType\" value={this.state.contactType} onChange={this.handleInputChange} >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\" rows=\"12\" value={this.state.message} onChange={this.handleInputChange}  />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row >\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\comments.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\promotions.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\leaders.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\AboutComponent.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\configureStore.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\reducer.jsx",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":27,"column":5,"nodeType":"82","messageId":"83","endLine":29,"endColumn":6},{"ruleId":"84","severity":1,"message":"85","line":111,"column":29,"nodeType":"86","endLine":111,"endColumn":72},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]