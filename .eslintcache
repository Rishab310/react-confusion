[{"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\index.js":"1","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\reportWebVitals.js":"2","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\App.js":"3","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\MainComponent.jsx":"4","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\configureStore.jsx":"5","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\AboutComponent.jsx":"6","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\DishdetailComponent.jsx":"7","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\MenuComponent.jsx":"8","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\HomeComponent.jsx":"9","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\HeaderComponent.jsx":"10","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\FooterComponent.jsx":"11","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\reducer.jsx":"12","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\ContactComponent.jsx":"13","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\promotions.jsx":"14","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\comments.jsx":"15","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\leaders.jsx":"16","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\dishes.jsx":"17","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\dishes.jsx":"18","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\comments.jsx":"19","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\leaders.jsx":"20","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\promotions.jsx":"21","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\ActionTypes.jsx":"22","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\ActionCreators.jsx":"23"},{"size":638,"mtime":1616424769333,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":495,"mtime":1612084068199,"results":"27","hashOfConfig":"25"},{"size":2672,"mtime":1617646240591,"results":"28","hashOfConfig":"25"},{"size":742,"mtime":1617643930192,"results":"29","hashOfConfig":"25"},{"size":4429,"mtime":1610699083569,"results":"30","hashOfConfig":"25"},{"size":8094,"mtime":1617647358834,"results":"31","hashOfConfig":"25"},{"size":2338,"mtime":1614267831282,"results":"32","hashOfConfig":"25"},{"size":1195,"mtime":1610654428972,"results":"33","hashOfConfig":"25"},{"size":5528,"mtime":1616954295695,"results":"34","hashOfConfig":"25"},{"size":2799,"mtime":1610565651179,"results":"35","hashOfConfig":"25"},{"size":407,"mtime":1612084114643,"results":"36","hashOfConfig":"25"},{"size":18693,"mtime":1617644157067,"results":"37","hashOfConfig":"25"},{"size":457,"mtime":1610649204388,"results":"38","hashOfConfig":"25"},{"size":4927,"mtime":1610649178849,"results":"39","hashOfConfig":"25"},{"size":2432,"mtime":1616572703902,"results":"40","hashOfConfig":"25"},{"size":1614,"mtime":1615912705402,"results":"41","hashOfConfig":"25"},{"size":160,"mtime":1617643494201,"results":"42","hashOfConfig":"25"},{"size":406,"mtime":1617646800096,"results":"43","hashOfConfig":"25"},{"size":164,"mtime":1617643549065,"results":"44","hashOfConfig":"25"},{"size":176,"mtime":1617643571715,"results":"45","hashOfConfig":"25"},{"size":41,"mtime":1617645007224,"results":"46","hashOfConfig":"25"},{"size":257,"mtime":1617645378270,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"8mn3ro",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\index.js",[],["97","98"],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\reportWebVitals.js",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\App.js",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\MainComponent.jsx",["99","100","101"],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\configureStore.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\AboutComponent.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\DishdetailComponent.jsx",["102","103","104"],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\MenuComponent.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\HomeComponent.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\HeaderComponent.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\FooterComponent.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\reducer.jsx",[],["105","106"],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\components\\ContactComponent.jsx",["107","108","109","110","111","112","113","114"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row, } from \"reactstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //State not needed after rect redux form\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    console.log(\"Current State is: \" + JSON.stringify(values));\r\n    alert(\"Current State is: \" + JSON.stringify(values));\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Contact Us</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Location Information</h3>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n            <h5>Our Address</h5>\r\n            <address>\r\n              121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n              <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n              <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n              <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n            </address>\r\n          </div>\r\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n            <h5>Map of our Location</h5>\r\n          </div>\r\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n            <div className=\"btn-group\" role=\"group\">\r\n              <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n              <a role=\"button\" className=\"btn btn-info\" ><i className=\"fa fa-skype\"></i> Skype</a>\r\n              <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Send us Your Feedback</h3>\r\n          </div>\r\n          <div className=\"col-12 col-md-9\">\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                <Col md={10}>\r\n                  <Control.text model=\".firstname\"\r\n                    className=\"form-control\"\r\n                    id=\"firstname\"\r\n                    name=\"firstname\"\r\n                    placeholder=\"First Name\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15)\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".firstname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required \",\r\n                      minLength: \"Must be greater than 2 charachters\",\r\n                      maxLength: \"Must be 15 charachters or less\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                <Col md={10}>\r\n                  <Control.text model=\".lastname\"\r\n                    className=\"form-control\"\r\n                    id=\"lastname\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last Name\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15)\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".lastname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required \",\r\n                      minLength: \"Must be greater than 2 charachters\",\r\n                      maxLength: \"Must be 15 charachters or less\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                <Col md={10}>\r\n                  <Control.text model=\".telnum\"\r\n                    className=\"form-control\"\r\n                    id=\"telnum\"\r\n                    name=\"telnum\"\r\n                    placeholder=\"Tel. Number\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                      isNumber\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".telnum\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required \",\r\n                      minLength: \"Must be greater than 2 numbers\",\r\n                      maxLength: \"Must be 15 numbers or less\",\r\n                      isNumber: \"Must be a number\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                <Col md={10}>\r\n                  <Control.text model=\".email\"\r\n                    className=\"form-control\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    validators={{\r\n                      required,\r\n                      validEmail\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".email\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required \",\r\n                      validEmail: \"Invalid Email Address\"\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 6, offset: 2 }}>\r\n                  <div className=\"form-check\" >\r\n                    <Label check>\r\n                      <Control.checkbox model=\".agree\"\r\n                        className=\"form-check-input\"\r\n                        name=\"agree\" />\r\n                      <strong>May we contact you?</strong>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n                <Col md={{ size: 3, offset: 1 }}>\r\n                  <Control.select model=\".contactType\"\r\n                    name=\"contactType\"\r\n                    className=\"form-control\">\r\n                    <option>Tel.</option>\r\n                    <option>Email</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                <Col md={10}>\r\n                  <Control.textarea model=\".message\"\r\n                    className=\"form-control\"\r\n                    type=\"textarea\"\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    rows=\"12\" />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 10, offset: 2 }}>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Send Feedback\r\n                                    </Button>\r\n                </Col>\r\n              </Row>\r\n            </LocalForm>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default Contact;\r\n\r\n\r\n//Before React redux forms was used \r\n\r\n// import React, { Component } from 'react';\r\n// import { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from \"reactstrap\";\r\n// import { Link } from 'react-router-dom';\r\n\r\n// class Contact extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             firstname: '',\r\n//             lastname: '',\r\n//             telnum: '',\r\n//             email: '',\r\n//             agree: false,\r\n//             contactType: 'Tel.',\r\n//             message: '',\r\n//             touched: {\r\n//                 firstname: false,\r\n//                 lastname: false,\r\n//                 telnum: false,\r\n//                 email: false,\r\n//             }\r\n//         };\r\n//         this.handleSubmit = this.handleSubmit.bind(this);\r\n//         this.handleInputChange = this.handleInputChange.bind(this);\r\n//     }\r\n\r\n//     handleBlur = (field) => (event) => {\r\n//         this.setState({\r\n//             touched: { ...this.state.touched, [field]: true }\r\n//         });\r\n//     }\r\n\r\n//     validate(firstname, lastname, telnum, email) {\r\n//         const errors = {\r\n//             firstname: '',\r\n//             lastname: '',\r\n//             telnum: '',\r\n//             email: ''\r\n//         };\r\n//         if (this.state.touched.firstname && firstname.length < 3)\r\n//             errors.firstname = 'First Name should be >= 3 characters';\r\n//         else if (this.state.touched.firstname && firstname.length > 10)\r\n//             errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n//         if (this.state.touched.lastname && lastname.length < 3)\r\n//             errors.lastname = 'Last Name should be >= 3 characters';\r\n//         else if (this.state.touched.lastname && lastname.length > 10)\r\n//             errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n//         const reg = /^\\d+$/;\r\n//         if (this.state.touched.telnum && !reg.test(telnum))\r\n//             errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n//         if (this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n//             errors.email = 'Email should contain a @';\r\n\r\n//         return errors;\r\n//     }\r\n\r\n//     handleInputChange(event) {\r\n//         const target = event.target;\r\n//         const value = (target.type === 'checkbox') ? target.checked : target.value;\r\n//         const name = target.name;\r\n//         this.setState({\r\n//             [name]: value\r\n//         })\r\n//     }\r\n\r\n//     handleSubmit(event) {\r\n//         console.log(\"Current State is: \" + JSON.stringify(this.state));\r\n//         alert(\"Current State is: \" + JSON.stringify(this.state));\r\n//         event.preventDefault();\r\n//     }\r\n\r\n//     render() {\r\n//         const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n\r\n//         return (\r\n//             <div className=\"container\">\r\n//                 <div className=\"row\">\r\n//                     <Breadcrumb>\r\n//                         <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n//                         <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n//                     </Breadcrumb>\r\n//                     <div className=\"col-12\">\r\n//                         <h3>Contact Us</h3>\r\n//                         <hr />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"row row-content\">\r\n//                     <div className=\"col-12\">\r\n//                         <h3>Location Information</h3>\r\n//                     </div>\r\n//                     <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n//                         <h5>Our Address</h5>\r\n//                         <address>\r\n//                             121, Clear Water Bay Road<br />\r\n//                         Clear Water Bay, Kowloon<br />\r\n//                         HONG KONG<br />\r\n//                             <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n//                             <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n//                             <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n//                         </address>\r\n//                     </div>\r\n//                     <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n//                         <h5>Map of our Location</h5>\r\n//                     </div>\r\n//                     <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n//                         <div className=\"btn-group\" role=\"group\">\r\n//                             <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n//                             <a role=\"button\" className=\"btn btn-info\" ><i className=\"fa fa-skype\"></i> Skype</a>\r\n//                             <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"row row-content\">\r\n//                     <div className=\"col-12\">\r\n//                         <h3>Send us Your Feedback</h3>\r\n//                     </div>\r\n//                     <div className=\"col-12 col-md-9\">\r\n//                         <Form onSubmit={this.handleSubmit}>\r\n//                             <FormGroup row>\r\n//                                 <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"text\" id=\"firstname\" name=\"firstname\" placeholder=\"First Name\" value={this.state.firstname} onChange={this.handleInputChange} onBlur={this.handleBlur('firstname')} valid={errors.firstname === ''} invalid={errors.firstname !== ''} />\r\n//                                     <FormFeedback>{errors.firstname}</FormFeedback>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"text\" id=\"lastname\" name=\"lastname\" placeholder=\"Last Name\" value={this.state.lastname} onChange={this.handleInputChange} onBlur={this.handleBlur('lastname')} valid={errors.lastname === ''} invalid={errors.lastname !== ''} />\r\n//                                     <FormFeedback>{errors.lastname}</FormFeedback>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"tel\" id=\"telnum\" name=\"telnum\" placeholder=\"Tel. Number\" value={this.state.telnum} onChange={this.handleInputChange} onBlur={this.handleBlur('telnum')} valid={errors.telnum === ''} invalid={errors.telnum !== ''} />\r\n//                                     <FormFeedback>{errors.telnum}</FormFeedback>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Label htmlFor=\"email\" md={2}>Email</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" value={this.state.email} onChange={this.handleInputChange} onBlur={this.handleBlur('email')} valid={errors.email === ''} invalid={errors.email !== ''} />\r\n//                                     <FormFeedback>{errors.email}</FormFeedback>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Col md={{ size: 6, offset: 2 }}>\r\n//                                     <FormGroup check>\r\n//                                         <Label check>\r\n//                                             <Input type=\"checkbox\" name=\"agree\" checked={this.state.agree} onChange={this.handleInputChange} />\r\n//                                             <strong>May we contact you?</strong>\r\n//                                         </Label>\r\n//                                     </FormGroup>\r\n//                                 </Col>\r\n//                                 <Col md={{ size: 3, offset: 1 }}>\r\n//                                     <Input type=\"select\" name=\"contactType\" value={this.state.contactType} onChange={this.handleInputChange} >\r\n//                                         <option>Tel.</option>\r\n//                                         <option>Email</option>\r\n//                                     </Input>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"textarea\" id=\"message\" name=\"message\" rows=\"12\" value={this.state.message} onChange={this.handleInputChange} />\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row >\r\n//                                 <Col md={{ size: 10, offset: 2 }}>\r\n//                                     <Button type=\"submit\" color=\"primary\">\r\n//                                         Send Feedback\r\n//                                     </Button>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                         </Form>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Contact;","H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\promotions.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\comments.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\leaders.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\shared\\dishes.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\dishes.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\comments.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\leaders.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\promotions.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\ActionTypes.jsx",[],"H:\\Web\\Full Stack Web Developement\\React\\Learning\\confusion\\src\\redux\\ActionCreators.jsx",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":28,"column":3,"nodeType":"121","messageId":"122","endLine":30,"endColumn":4},{"ruleId":"123","severity":1,"message":"124","line":85,"column":1,"nodeType":"125","messageId":"126","endLine":85,"endColumn":93},{"ruleId":"123","severity":1,"message":"124","line":86,"column":1,"nodeType":"125","messageId":"126","endLine":86,"endColumn":106},{"ruleId":"127","severity":1,"message":"128","line":41,"column":19,"nodeType":"129","endLine":43,"endColumn":46},{"ruleId":"127","severity":1,"message":"130","line":53,"column":19,"nodeType":"129","endLine":62,"endColumn":21},{"ruleId":"127","severity":1,"message":"131","line":75,"column":21,"nodeType":"129","endLine":80,"endColumn":34},{"ruleId":"115","replacedBy":"132"},{"ruleId":"117","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":60,"column":15,"nodeType":"129","endLine":60,"endColumn":58},{"ruleId":"127","severity":1,"message":"130","line":74,"column":19,"nodeType":"129","endLine":84,"endColumn":21},{"ruleId":"127","severity":1,"message":"130","line":100,"column":19,"nodeType":"129","endLine":110,"endColumn":21},{"ruleId":"127","severity":1,"message":"130","line":126,"column":19,"nodeType":"129","endLine":137,"endColumn":21},{"ruleId":"127","severity":1,"message":"130","line":154,"column":19,"nodeType":"129","endLine":163,"endColumn":21},{"ruleId":"127","severity":1,"message":"136","line":179,"column":23,"nodeType":"129","endLine":181,"endColumn":40},{"ruleId":"127","severity":1,"message":"128","line":187,"column":19,"nodeType":"129","endLine":189,"endColumn":46},{"ruleId":"127","severity":1,"message":"131","line":198,"column":19,"nodeType":"129","endLine":203,"endColumn":33},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE",["137"],["138"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]